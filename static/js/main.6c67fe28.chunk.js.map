{"version":3,"sources":["components/page2.js","components/page3.js","components/page4.js","components/page5.js","components/page6.js","App.js","registerServiceWorker.js","index.js"],"names":["Page2","this","typed","Typed","el","strings","typeSpeed","startDelay","backSpeed","backDelay","loop","destroy","className","aria-hidden","id","style","whiteSpace","ref","Component","Page3","Page4","Page5","Page6","App","window","document","body","offsetWidth","visibleSlides","orientation","totalSlides","step","touchEnabled","index","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6c67fe28.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { ButtonBack, ButtonNext } from 'pure-react-carousel';\nimport Typed from 'typed.js';\n\nclass Page2 extends Component {\n  componentDidMount() {\n    const options = {\n      strings: [\n        \"HTML5\", \"CSS\", \"Vue.js\", \"React\", \"JavaScript\", \"ES6\", \"jQuery\", \"Spring\"\n      ],\n      typeSpeed: 150,\n      startDelay: 500,\n      backSpeed: 100,\n      backDelay: 1300,\n      loop: true,\n    }\n    this.typed = new Typed(this.el, options);\n  }\n  // 메모리 누수 방지\n  componentWillUnmount() {\n    this.typed.destroy();\n  }\n  render() {\n    return (\n      <div className=\"page-2\">\n        <ButtonBack className=\"to-top\">\n          <span className=\"fa fa-angle-double-up\" aria-hidden=\"true\"></span>\n        </ButtonBack>\n        <div className=\"container-fluid\">\n          <div className=\"page-2-content\">\n            <h4 className=\"page-2-h4\">저는 &nbsp;\n            <strong id=\"typed\" style={{ whiteSpace: \"pre\" }} ref={(el) => { this.el = el; }}></strong>할 줄 아는 <strong></strong>프론트엔드 개발자입니다.</h4>\n          </div>\n        </div>\n        <ButtonNext className=\"to-bottom\">\n          <span className=\"fa fa-angle-double-down\" aria-hidden=\"true\"></span>\n        </ButtonNext>\n      </div>\n    );\n  }\n}\n\nexport default Page2;\n","import React, { Component } from 'react';\nimport { ButtonBack, ButtonNext } from 'pure-react-carousel';\nimport Typed from 'typed.js';\n\nclass Page3 extends Component {\n  componentDidMount() {\n    const options = {\n      strings: [\n        \"About\"\n      ],\n      typeSpeed: 150,\n      startDelay: 500,\n      backSpeed: 100,\n      backDelay: 1300,\n      loop: true,\n    }\n    this.typed = new Typed(this.el, options);\n  }\n  // 메모리 누수 방지\n  componentWillUnmount() {\n    this.typed.destroy();\n  }\n  render() {\n    return (\n      <div className=\"page-2\">\n        <ButtonBack className=\"to-top\">\n          <span className=\"fa fa-angle-double-up\" aria-hidden=\"true\"></span>\n        </ButtonBack>\n        <div className=\"container-fluid\">\n          <div className=\"page-2-content\">\n            <h4 className=\"page-2-h4\">이곳은  &nbsp;\n            <strong id=\"typed\" style={{ whiteSpace: \"pre\" }} ref={(el) => { this.el = el; }}></strong>페이지입니다.</h4>\n          </div>\n        </div>\n        <ButtonNext className=\"to-bottom\">\n          <span className=\"fa fa-angle-double-down\" aria-hidden=\"true\"></span>\n        </ButtonNext>\n      </div>\n    );\n  }\n}\n\nexport default Page3;\n","import React, { Component } from 'react';\nimport { ButtonBack, ButtonNext } from 'pure-react-carousel';\nimport Typed from 'typed.js';\n\nclass Page4 extends Component {\n  componentDidMount() {\n    const options = {\n      strings: [\n        \"Protfolio\"\n      ],\n      typeSpeed: 150,\n      startDelay: 500,\n      backSpeed: 100,\n      backDelay: 1300,\n      loop: true,\n    }\n    this.typed = new Typed(this.el, options);\n  }\n  // 메모리 누수 방지\n  componentWillUnmount() {\n    this.typed.destroy();\n  }\n  render() {\n    return (\n      <div className=\"page-2\">\n        <ButtonBack className=\"to-top\">\n          <span className=\"fa fa-angle-double-up\" aria-hidden=\"true\"></span>\n        </ButtonBack>\n        <div className=\"container-fluid\">\n          <div className=\"page-2-content\">\n            <h4 className=\"page-2-h4\">이곳은  &nbsp;\n            <strong id=\"typed\" style={{ whiteSpace: \"pre\" }} ref={(el) => { this.el = el; }}></strong>페이지입니다.</h4>\n          </div>\n        </div>\n        <ButtonNext className=\"to-bottom\">\n          <span className=\"fa fa-angle-double-down\" aria-hidden=\"true\"></span>\n        </ButtonNext>\n      </div>\n    );\n  }\n}\n\nexport default Page4;\n","import React, { Component } from 'react';\nimport { ButtonBack, ButtonNext } from 'pure-react-carousel';\n\n// 어떤 개발자가 되고 싶나\nclass Page5 extends Component {\n  render() {\n    return (\n      <div className=\"page-5\">\n        <ButtonBack className=\"to-top\">\n          <span className=\"fa fa-angle-double-up\" aria-hidden=\"true\"></span>\n        </ButtonBack>\n        <div className=\"container-fluid\">\n          <div className=\"page-5-content\">\n            <h4>오늘에 만족하지 않고\n            <br />더 나은 내일을 위해\n            <br />항상 스스로를 계발하는\n            <br />개발자가 되고 싶습니다.</h4>\n            <br />\n            <br />\n            {/* <p className=\"running-emoji\">  </p> */}\n            <div className=\"box\"></div>\n          </div>\n        </div>\n        <ButtonNext className=\"to-bottom\">\n          <span className=\"fa fa-angle-double-down\" aria-hidden=\"true\"></span>\n        </ButtonNext>\n      </div>\n    );\n  }\n}\n\nexport default Page5;\n","import React, { Component } from 'react';\nimport { ButtonBack, ButtonNext } from 'pure-react-carousel';\nimport Typed from 'typed.js';\n\nclass Page6 extends Component {\n  componentDidMount() {\n    const options = {\n      strings: [\n        \"Contact\"\n      ],\n      typeSpeed: 150,\n      startDelay: 500,\n      backSpeed: 100,\n      backDelay: 1300,\n      loop: true,\n    }\n    this.typed = new Typed(this.el, options);\n  }\n  // 메모리 누수 방지\n  componentWillUnmount() {\n    this.typed.destroy();\n  }\n  render() {\n    return (\n      <div className=\"page-2\">\n        <ButtonBack className=\"to-top\">\n          <span className=\"fa fa-angle-double-up\" aria-hidden=\"true\"></span>\n        </ButtonBack>\n        <div className=\"container-fluid\">\n          <div className=\"page-2-content\">\n            <h4 className=\"page-2-h4\">이곳은  &nbsp;\n            <strong id=\"typed\" style={{ whiteSpace: \"pre\" }} ref={(el) => { this.el = el; }}></strong>페이지입니다.<strong>연락주세요</strong></h4>\n          </div>\n        </div>\n        <ButtonNext className=\"to-bottom\">\n          <span className=\"fa fa-angle-double-down\" aria-hidden=\"true\"></span>\n        </ButtonNext>\n      </div>\n    );\n  }\n}\n\nexport default Page6;\n","import React, { Component } from 'react';\nimport { CarouselProvider, Slider, Slide, ButtonNext } from 'pure-react-carousel';\n\nimport Page2 from './components/page2';\nimport Page3 from './components/page3';\nimport Page4 from './components/page4';\nimport Page5 from './components/page5';\nimport Page6 from './components/page6';\nimport './App.css';\n\nclass App extends Component {\n  // 실행되는 브라우저 width 값에 따라 터치 / 클릭 안내메시지 구분\n  offsetWidth() { //레이아웃 폭 설정.\n    if (window.document.body.offsetWidth < 768) {\n      return <span className=\"touch-guide\">터치하여 계속 보기</span>\n    } else {\n      return <span className=\"touch-guide\">클릭하여 계속 보기</span>\n    }\n  };\n  // guideMsg() {\n  //   if (window.document.body.offsetWidth < 768) {\n  //     return <span className=\"fa fa-exclamation-circle guide-msg\" aria-hidden=\"true\"> 상단 또는 하단 영역을 터치하여 계속 보기</span>\n  //   } else {\n  //     return <span className=\"fa fa-exclamation-circle guide-msg\" aria-hidden=\"true\"> 상단 또는 하단 영역을 클릭하여 계속 보기</span>\n  //   }\n  // };\n  render() {\n    return (\n      <div className=\"App\">\n        <CarouselProvider\n          visibleSlides={1} //한 번에 표시 할 슬라이드 수입니다. 이 숫자는 <= totalSlides 여야합니다.\n          orientation=\"vertical\"\n          totalSlides={6} //전체 슬라이드 수와 동일하게\n          step={1}\n          touchEnabled={false} //터치 이벤트를 사용하려면 true로 설정하십시오.\n        >\n          <Slider>\n            <Slide index={0}>\n              <div className=\"page-1\">\n                {/* <span className=\"fa fa-check-circle react-msg\" aria-hidden=\"true\"> 본 사이트는 React로 제작되었습니다.</span> */}\n                <div className=\"container-fluid\">\n                  <div className=\"page-1-content\">\n                    <p className=\"page-1-p\">안녕하세요! 코딩이 너무 재미있는!</p>\n                    <h1>Developer <strong>문규빈</strong>의 포트폴리오 입니다.</h1>\n\n                  </div>\n                  <ButtonNext className=\"to-bottom-first\">\n                    {this.offsetWidth()}\n                    <br />\n                    <span className=\"fa fa-angle-double-down\" aria-hidden=\"true\"></span>\n                  </ButtonNext>\n                </div>\n              </div>\n            </Slide>\n\n            <Slide index={1}>\n              <Page2 />\n            </Slide>\n\n            <Slide index={2}>\n              <Page3 />\n            </Slide>\n\n            <Slide index={3}>\n              <Page4 />\n            </Slide>\n\n            <Slide index={4}>\n              <Page5 />\n            </Slide>\n\n            <Slide index={5}>\n              <Page6 />\n            </Slide>\n\n          </Slider>\n        </CarouselProvider>\n      </div >\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}